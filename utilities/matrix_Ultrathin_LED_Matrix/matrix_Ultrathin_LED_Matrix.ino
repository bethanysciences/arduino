/* from https://github.com/dpavlin/Arduino-projects/tree/master/Hub08_LedMatrix
Pins [FUNCT] (Uno/Zero) HUB08 Port       (Uno/Zero)   [FUNC]
                        GND    A           (8/4)
                        GND    B           (7/5)
                        GND    C           (6/6)
               (3/3) (EN)OE    D           (5/7)
  [SPI:MOSI] (11/23)     R1    NC
                         NC    NC
                        GND    STB(Latch)  (2/2)     
                        GND    CLK(clock)  (13/24)    [SPI:CLK]
*/
#include "LEDMatrix.h"
#include <TimerOne.h>
#include "fontdigits.h"
// #include "font8x8.h"
#include "font8x16.h"

#define WIDTH   64
#define HEIGHT  16

              // a, b, c, d, oe, r1, stb, clk);
LEDMatrix matrix(8, 7, 6, 5, 3, 11, 2, 13);

uint8_t displaybuf[WIDTH * HEIGHT / 8] = {  // Display Buffer 128 = 64 * 16 / 8
0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0xFC,0x00,0x00,0x00,0x00,0x00,0x60,0x01,0xF8,0x00,0x00,0x00,0x00,0x00,0x60,
0x01,0xF0,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0xE0,0x07,0x8F,0xC7,0xC7,0xC7,0xE0,
0x00,0x40,0x0C,0xCE,0x6C,0x6C,0x6C,0xE0,0x00,0xE0,0x0C,0x0C,0x6C,0x6C,0x6C,0x60,
0x01,0xF0,0x07,0x8C,0x6F,0xEF,0xEC,0x60,0x23,0xF8,0x00,0xCC,0x6C,0x0C,0x0C,0x60,
0x33,0xF8,0x0C,0xCE,0x6C,0x6C,0x6C,0xE0,0x3B,0xF8,0x07,0x8F,0xC7,0xC7,0xC7,0xE0,
0x3B,0xF8,0x00,0x0C,0x00,0x00,0x00,0x00,0x1B,0xF8,0x00,0x0C,0x00,0x00,0x00,0x00,
0x0B,0xF8,0x00,0x0C,0x00,0x00,0x00,0x00,0x07,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,
};

void drawDigital(uint8_t x, uint8_t y, uint8_t n) {       // (x, y) top-left position, x should be multiple of 8
    // if ((n >= 10) || (0 != (x % 8))) { return; }
    uint8_t *pDst = displaybuf + y * (WIDTH / 8) + x / 8;
    const uint8_t *pSrc = fontdigits + n * 16;
    // const uint8_t *pSrc = font8x16 + n * 16;
    for (uint8_t i = 0; i < 16; i++) {
        *pDst = *pSrc;
        pDst += WIDTH / 8;
        pSrc++;
    }
}

void timer_isr() {
    matrix.scan();
}

void setup() {
    Serial.begin(115200);
    matrix.begin(displaybuf, WIDTH, HEIGHT);
    Timer1.initialize(1200);
    Timer1.attachInterrupt(timer_isr);
    delay(1500);
    matrix.reverse();
    matrix.clear();
}

uint8_t xpos = 8;
uint8_t ypos = 0;

void loop() {
    static uint8_t count = 0;
    
    drawDigital(xpos, ypos, count);
    delay(1000);
    // count = (count + 1) & 0x7;
    count = (count + 1);
    Serial.println(count);
}
