#include <avr/pgmspace.h>
#include <SPI.h>
#include "HUB08SPI.h"
#include <TimerOne.h>

#define WIDTH   64
#define HEIGHT  16

HUB08SPI display;

uint8_t displaybuf[WIDTH * HEIGHT / 8];

//16*16 pixel font, first byte is character width
const PROGMEM  uint8_t font[] = { 
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 32
	0x03, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 33: !
	0x08, 0xe7, 0x00, 0xe7, 0x00, 0xe7, 0x00, 0xe7, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 34: "
	0x0c, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0, 0xff, 0xf0, 0xff, 0xf0, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0, 0xff, 0xf0, 0xff, 0xf0, 0x39, 0xc0, 0x39, 0xc0, 0x39, 0xc0,	  // char 35: #
	0x0b, 0x0e, 0x00, 0x0e, 0x00, 0x7f, 0xc0, 0xff, 0xe0, 0xee, 0xe0, 0xee, 0x00, 0xee, 0x00, 0xff, 0xc0, 0x7f, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0xee, 0xe0, 0xff, 0xe0, 0x7f, 0xc0, 0x0e, 0x00, 0x0e, 0x00,	  // char 36: $
	0x0c, 0x70, 0xe0, 0xf8, 0xe0, 0xd9, 0xc0, 0xf9, 0xc0, 0x73, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0xe0, 0x39, 0xf0, 0x39, 0xb0, 0x71, 0xf0, 0x70, 0xe0,	  // char 37: %
	0x0c, 0x1e, 0x00, 0x3f, 0x00, 0x73, 0x80, 0x73, 0x80, 0x73, 0x80, 0x73, 0x80, 0x33, 0x80, 0x3f, 0x00, 0x7e, 0x00, 0xee, 0x30, 0xe7, 0x70, 0xe3, 0xe0, 0xe1, 0xc0, 0xe3, 0xe0, 0xff, 0x70, 0x7e, 0x30,	  // char 38: &
	0x03, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 39: '
	0x05, 0x38, 0x00, 0x78, 0x00, 0xf0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xf0, 0x00, 0x78, 0x00, 0x38, 0x00,	  // char 40: (
	0x05, 0xe0, 0x00, 0xf0, 0x00, 0x78, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x78, 0x00, 0xf0, 0x00, 0xe0, 0x00,	  // char 41: )
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00, 0x77, 0x00, 0x3e, 0x00, 0x1c, 0x00, 0xff, 0x80, 0xff, 0x80, 0x1c, 0x00, 0x3e, 0x00, 0x77, 0x00, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 42: *
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0xff, 0x80, 0xff, 0x80, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 43: +
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x60, 0x00, 0xe0, 0x00,	  // char 44: ,
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 45: -
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 46: .
	0x05, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 47: /
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 48: 0
	0x09, 0x1c, 0x00, 0x3c, 0x00, 0x7c, 0x00, 0xfc, 0x00, 0xdc, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0xff, 0x80, 0xff, 0x80,	  // char 49: 1
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0x00, 0xf0, 0x01, 0xe0, 0x03, 0xc0, 0x07, 0x80, 0x0f, 0x00, 0x1e, 0x00, 0x3c, 0x00, 0x78, 0x00, 0xf0, 0x70, 0xff, 0xf0, 0xff, 0xf0,	  // char 50: 2
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0x00, 0xe0, 0x01, 0xc0, 0x03, 0x80, 0x07, 0x00, 0x0f, 0xf0, 0x0f, 0xf0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 51: 3
	0x0c, 0x03, 0x80, 0x07, 0x80, 0x07, 0x80, 0x0f, 0x80, 0x1f, 0x80, 0x3b, 0x80, 0x3b, 0x80, 0x73, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xff, 0xf0, 0xff, 0xf0, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	  // char 52: 4
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xe0, 0x00, 0xf0, 0x00, 0x70, 0x00, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 53: 5
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xff, 0xc0, 0xff, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 54: 6
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x01, 0xc0, 0x03, 0x80, 0x07, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00,	  // char 55: 7
	0x0c, 0x1f, 0x80, 0x3f, 0xc0, 0x79, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x39, 0xc0, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 56: 8
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xf0, 0x3f, 0xf0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 57: 9
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00,	  // char 58: :
	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x60, 0x00, 0xe0, 0x00,	  // char 59: ;
	0x08, 0x00, 0x00, 0x03, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x07, 0x00, 0x03, 0x00, 0x00, 0x00,	  // char 60: <
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 61: =
	0x08, 0x00, 0x00, 0xc0, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xc0, 0x00, 0x00, 0x00,	  // char 62: >
	0x0b, 0x3f, 0x80, 0x7f, 0xc0, 0xf1, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0x01, 0xe0, 0x03, 0xc0, 0x07, 0x80, 0x0f, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	  // char 63: ?
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe5, 0x70, 0xef, 0x70, 0xeb, 0x70, 0xeb, 0x70, 0xef, 0xf0, 0xef, 0xe0, 0xe7, 0x80, 0xe0, 0x00, 0xf0, 0x70, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 64: @
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70,	  // char 65: A
	0x0c, 0xff, 0x80, 0xff, 0xc0, 0x71, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x71, 0xc0, 0x7f, 0xc0, 0x7f, 0xc0, 0x70, 0xe0, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xf0, 0xff, 0xe0, 0xff, 0xc0,	  // char 66: B
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 67: C
	0x0c, 0xff, 0xc0, 0xff, 0xe0, 0x70, 0xf0, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xf0, 0xff, 0xe0, 0xff, 0xc0,	  // char 68: D
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0x70, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x7f, 0x00, 0x7f, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x70, 0xff, 0xf0, 0xff, 0xf0,	  // char 69: E
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0x70, 0x70, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x7f, 0x00, 0x7f, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	  // char 70: F
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe7, 0xf0, 0xe7, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 71: G
	0x0c, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70,	  // char 72: H
	0x07, 0xfe, 0x00, 0xfe, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0xfe, 0x00, 0xfe, 0x00,	  // char 73: I
	0x0c, 0x07, 0xf0, 0x07, 0xf0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 74: J
	0x0c, 0xf0, 0x70, 0xf0, 0x70, 0x70, 0x70, 0x70, 0xe0, 0x71, 0xc0, 0x73, 0x80, 0x77, 0x00, 0x7e, 0x00, 0x7e, 0x00, 0x77, 0x00, 0x73, 0x80, 0x71, 0xc0, 0x70, 0xe0, 0x70, 0x70, 0xf0, 0x70, 0xf0, 0x70,	  // char 75: K
	0x0a, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe1, 0xc0, 0xff, 0xc0, 0xff, 0xc0,	  // char 76: L
	0x0b, 0xe0, 0xe0, 0xe0, 0xe0, 0xf1, 0xe0, 0xf1, 0xe0, 0xfb, 0xe0, 0xff, 0xe0, 0xff, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xe4, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0,	  // char 77: M
	0x0b, 0xe0, 0xe0, 0xe0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf8, 0xe0, 0xf8, 0xe0, 0xec, 0xe0, 0xec, 0xe0, 0xe6, 0xe0, 0xe6, 0xe0, 0xe3, 0xe0, 0xe3, 0xe0, 0xe1, 0xe0, 0xe1, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0,	  // char 78: N
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 79: O
	0x0c, 0xff, 0xc0, 0xff, 0xe0, 0x70, 0xf0, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xf0, 0x7f, 0xe0, 0x7f, 0xc0, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	  // char 80: P
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe6, 0x70, 0xe7, 0x70, 0xe3, 0xf0, 0xe1, 0xe0, 0xf3, 0xe0, 0x7f, 0xf0, 0x3f, 0xb0,	  // char 81: Q
	0x0c, 0xff, 0xc0, 0xff, 0xe0, 0x70, 0xf0, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xf0, 0x7f, 0xe0, 0x7f, 0xc0, 0x7f, 0x00, 0x77, 0x80, 0x73, 0xc0, 0x71, 0xe0, 0x70, 0xf0, 0x70, 0x70, 0x70, 0x70,	  // char 82: R
	0x0c, 0x3f, 0xc0, 0x7f, 0xe0, 0xf0, 0xf0, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x00, 0xf0, 0x00, 0x7f, 0xc0, 0x3f, 0xe0, 0x00, 0xf0, 0x00, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 83: S
	0x0b, 0xff, 0xe0, 0xff, 0xe0, 0xee, 0xe0, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	  // char 84: T
	0x0c, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xf0, 0xf0, 0x7f, 0xe0, 0x3f, 0xc0,	  // char 85: U
	0x0c, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0x70, 0xe0, 0x70, 0xe0, 0x39, 0xc0, 0x39, 0xc0, 0x1f, 0x80, 0x1f, 0x80, 0x0f, 0x00, 0x0f, 0x00, 0x06, 0x00,	  // char 86: V
	0x0c, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe6, 0x70, 0xe6, 0x70, 0xef, 0x70, 0x6f, 0x60, 0x7f, 0xe0, 0x7f, 0xe0, 0x79, 0xe0, 0x30, 0xc0, 0x30, 0xc0,	  // char 87: W
	0x0c, 0xf9, 0xf0, 0xf9, 0xf0, 0x70, 0xe0, 0x70, 0xe0, 0x39, 0xc0, 0x39, 0xc0, 0x1f, 0x80, 0x0f, 0x00, 0x0f, 0x00, 0x1f, 0x80, 0x39, 0xc0, 0x39, 0xc0, 0x70, 0xe0, 0x70, 0xe0, 0xf9, 0xf0, 0xf9, 0xf0,	  // char 88: X
	0x0b, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0x71, 0xc0, 0x3b, 0x80, 0x1f, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	  // char 89: Y
	0x0c, 0xff, 0xf0, 0xff, 0xf0, 0xe0, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x01, 0xc0, 0x03, 0x80, 0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x70, 0xff, 0xf0, 0xff, 0xf0,	  // char 90: Z
	0x06, 0xfc, 0x00, 0xfc, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xfc, 0x00, 0xfc, 0x00,	  // char 91: [
	0x05, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 92: backslash
	0x06, 0xfc, 0x00, 0xfc, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0xfc, 0x00, 0xfc, 0x00,	  // char 93: ]
	0x09, 0x1c, 0x00, 0x3e, 0x00, 0x77, 0x00, 0xe3, 0x80, 0xe3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 94: ^
	0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0xff, 0x80,	  // char 95: _
	0x06, 0xe0, 0x00, 0x70, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 96: `
	0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x7f, 0xc0, 0x03, 0xc0, 0x01, 0xc0, 0x3f, 0xc0, 0x7f, 0xc0, 0xf1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0xe0, 0x3e, 0xe0,	  // char 97: a
	0x0a, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xef, 0x00, 0xff, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0xff, 0x80, 0xef, 0x00,	  // char 98: b
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 99: c
	0x0a, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x3d, 0xc0, 0x7f, 0xc0, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0xc0, 0x3d, 0xc0,	  // char 100: d
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xff, 0xc0, 0xff, 0xc0, 0xe0, 0x00, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 101: e
	0x08, 0x0f, 0x00, 0x1f, 0x00, 0x3c, 0x00, 0x38, 0x00, 0xff, 0x00, 0xff, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00,	  // char 102: f
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xc0, 0x7f, 0xc0, 0xf3, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0xc0, 0x3d, 0xc0, 0x01, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 103: g
	0x0a, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xef, 0x00, 0xff, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0,	  // char 104: h
	0x05, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xf8, 0x00, 0xf8, 0x00,	  // char 105: i
	0x07, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0xee, 0x00, 0xfe, 0x00, 0x7c, 0x00, 0x38, 0x00,	  // char 106: j
	0x0a, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe1, 0xc0, 0xe3, 0xc0, 0xe7, 0x80, 0xef, 0x00, 0xfe, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0xfe, 0x00, 0xef, 0x00, 0xe7, 0x80, 0xe3, 0xc0, 0xe1, 0xc0,	  // char 107: k
	0x04, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x70, 0x00,	  // char 108: l
	0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0xff, 0xc0, 0xff, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0, 0xee, 0xe0,	  // char 109: m
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0x00, 0xff, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0,	  // char 110: n
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 111: o
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0x00, 0xff, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0xff, 0x80, 0xef, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 112: p
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xc0, 0x7f, 0xc0, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0xc0, 0x3d, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0,	  // char 113: q
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0x00, 0xfe, 0x00, 0xf0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 114: r
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xf0, 0x00, 0x7f, 0x00, 0x3f, 0x80, 0x03, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00,	  // char 115: s
	0x07, 0x08, 0x00, 0x18, 0x00, 0x38, 0x00, 0x38, 0x00, 0xfe, 0x00, 0xfe, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x1e, 0x00, 0x0e, 0x00,	  // char 116: t
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0xc0, 0x3d, 0xc0,	  // char 117: u
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0, 0x73, 0x80, 0x73, 0x80, 0x33, 0x00, 0x3f, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x0c, 0x00, 0x0c, 0x00,	  // char 118: v
	0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x70, 0xe0, 0x70, 0xe0, 0x70, 0xe6, 0x70, 0xe6, 0x70, 0xef, 0x70, 0xff, 0xf0, 0x7f, 0xe0, 0x79, 0xe0, 0x79, 0xe0, 0x30, 0xc0, 0x30, 0xc0,	  // char 119: w
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe1, 0xc0, 0xe1, 0xc0, 0xf3, 0xc0, 0x7f, 0x80, 0x3f, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x3f, 0x00, 0x7f, 0x80, 0xf3, 0xc0, 0xe1, 0xc0, 0xe1, 0xc0,	  // char 120: x
	0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe0, 0xe0, 0xe0, 0x71, 0xc0, 0x71, 0xc0, 0x3b, 0x80, 0x3b, 0x80, 0x1f, 0x00, 0x1f, 0x00, 0x0e, 0x00, 0x1e, 0x00, 0xfc, 0x00, 0x78, 0x00,	  // char 121: y
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xc0, 0xc1, 0xc0, 0x03, 0x80, 0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe1, 0xc0, 0xff, 0xc0, 0xff, 0xc0,	  // char 122: z
	0x08, 0x0f, 0x00, 0x1f, 0x00, 0x3c, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x78, 0x00, 0xf0, 0x00, 0xf0, 0x00, 0x78, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x3c, 0x00, 0x1f, 0x00, 0x0f, 0x00,	  // char 123: {
	0x03, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00,	  // char 124: |
	0x08, 0xf0, 0x00, 0xf8, 0x00, 0x3c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1e, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x1e, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0xf8, 0x00, 0xf0, 0x00,	  // char 125: }
	0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x70, 0x7e, 0xf0, 0xf7, 0xe0, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	  // char 126: ~
	0x09, 0xff, 0x80, 0xff, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xe3, 0x80, 0xff, 0x80, 0xff, 0x80,	  // char 127
};

char * string = "eMGoz HUB08 library demo! 0123456789";
int length = 480; 

void setup()
{
    display.begin(displaybuf, WIDTH, HEIGHT);
    Timer1.initialize(200);  //slightly faster refresh rate
    Timer1.attachInterrupt(refresh);
    display.setBrightness(64); 
}
volatile uint16_t x = 0;
void loop()
{
  static uint16_t lx = 0;
  if (x != lx){
    lx = x;
    printString(string,64-lx);
  }
}
void refresh() {
    static uint16_t count = 0;
    count++;
    if (count > 180){  //scoll every 180 line scans
      count= 0;
      x++;
      if (x > length) x = 0;  //reset after 480 pixels
    }
    display.scan();  //refresh a single line of the display
}
void printString(char* string, int x){
  while (*string){
    byte c = *string-32;
    printChar(c,x,0);
    x+=pgm_read_byte_near(font + (c * 33))+1;
    string++;
  }
}
void printChar(byte c, int x, int y){
   byte l = pgm_read_byte_near(font + (c * 33))+1;  //get pixel width of character
    for (int a=0;a<16;a++){   
      clearLine(x,y+a,l);
      writeByte(x,y+a,pgm_read_byte_near(font + (c * 33) +a*2 +1));
      writeByte(x+8,y+a,pgm_read_byte_near(font + (c * 33) +a*2 +2));
  }
}
void writeByte(int x, int y, uint8_t data)
{
    if (x >= WIDTH ||y >= HEIGHT || x+8<=0 || y < 0) return; //outside screen
    uint8_t offset = x & 7;  //bit offset
    if (offset) //not aligned
    {
        writeByte(x-offset,y,data>>offset);
        writeByte(x+8-offset,y,data<<(8-offset));
    }
    else     //Aligned byte
    {
        uint8_t col = x / 8;
        displaybuf[y*8+col] |= data;
    }
}
void clearLine(int x,int y, int w)
{
    if (y < 0 || y >= HEIGHT || x >= WIDTH) return;
    if (x < 0)
    {
        w = w+x;
        x = 0;
    }
    if (x + w > WIDTH)
        w = WIDTH-x;
    if (w <= 0) return;
    if ((x& 7)+w <= 8)
    {
        uint8_t m = 0xFF << (8-w);
        m >>= (x& 7);
        displaybuf[y*8+x/8] &= ~m;
    }
    else
    {
        uint16_t start = y*8+(x+7)/8;  //included
        uint16_t end =   y*8+(x+w)/8;  //not included
        if (x& 7) displaybuf[start-1] &= ~(0xFF >> (x& 7));
        for (uint16_t p = start; p < end ; p++) displaybuf[p] = 0;
        if ((x+w)& 7) displaybuf[end] &= ~(0xFF << (8-(x+w)& 7));
    }
}
